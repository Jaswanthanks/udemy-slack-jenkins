pipeline {
    agent any
    environment {
        GIT_BRANCH = sh(script: "git rev-parse --abbrev-ref HEAD", returnStdout: true).trim()
    }
    stages {
        stage('Checkout Code') {
            steps {
                git 'https://github.com/VenkatVGS/NodeJs-app.git'
            }
        }
        stage('Build Docker Image') {
            steps {
                script {
                    sh 'docker build -t venkateshvgs/nodejs-app:latest .'
                    sh 'docker images'
                }
            }
        }
        stage('Docker Push') {
            steps {
                script {
                    withCredentials([string(credentialsId: 'dockerpass', variable: 'dockerPassword')]) {
                        sh "docker login -u venkateshvgs -p ${dockerPassword}"
                        sh 'docker push venkateshvgs/nodejs-app:latest'
                    }
                }
            }
        }
        stage('Deploy Docker Container') {
            steps {
                script {
                    sh 'docker pull venkateshvgs/nodejs-app:latest'
                    sh 'docker stop nodejs-app || true'  // Stop the container if it exists
                    sh 'docker rm nodejs-app || true'    // Remove the container if it exists
                    sh 'docker run -itd --name nodejs-app -p 3000:80 venkateshvgs/nodejs-app:latest'
                }
            }
        }
    }
    post {
        success {
            slackSend channel: '#all-vgsjenkinsworkspace',
                attachments: [
                    [
                        color: 'good', // Green for success
                        title: "✅ Build Successful!",
                        text: "Build #${env.BUILD_NUMBER} has completed successfully! :white_check_mark:",
                        fields: [
                            [title: "Project", value: "${env.JOB_NAME}", short: true],
                            [title: "Branch", value: "${env.GIT_BRANCH}", short: true]
                        ],
                        footer: "Jenkins CI/CD Pipeline",
                        ts: System.currentTimeMillis() / 1000
                    ]
                ]
        }
        failure {
            slackSend channel: '#all-vgsjenkinsworkspace',
                attachments: [
                    [
                        color: 'danger', // Red for failure
                        title: "❌ Build Failed!",
                        text: "Build #${env.BUILD_NUMBER} has failed! :x: <!here>",
                        fields: [
                            [title: "Project", value: "${env.JOB_NAME}", short: true],
                            [title: "Branch", value: "${env.GIT_BRANCH}", short: true]
                        ],
                        footer: "Jenkins CI/CD Pipeline",
                        ts: System.currentTimeMillis() / 1000
                    ]
                ]
        }
    }
}